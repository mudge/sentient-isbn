# A Sentient program to encode ISBN-10s, ISBN-13s, their check
# digits and how they relate.


# Declare all parts of the ISBN including check digits.

int5 ten0, ten1, ten2, ten3, ten4, ten5, ten6, ten7, ten8;
int5 ten_check_digit, thirteen_check_digit;

# State that all digits must be between 0 and 9 inclusive aside
# from ISBN-10 check digits which can include 10.

invariant ten0 >= 0, ten0 <= 9;
invariant ten1 >= 0, ten1 <= 9;
invariant ten2 >= 0, ten2 <= 9;
invariant ten3 >= 0, ten3 <= 9;
invariant ten4 >= 0, ten4 <= 9;
invariant ten5 >= 0, ten5 <= 9;
invariant ten6 >= 0, ten6 <= 9;
invariant ten7 >= 0, ten7 <= 9;
invariant ten8 >= 0, ten8 <= 9;
invariant ten_check_digit >= 0, ten_check_digit <= 10;
invariant thirteen_check_digit >= 0, thirteen_check_digit <= 9;

# Collect all digits in an ISBN-10.

ten_digit = [
  ten0,
  ten1,
  ten2,
  ten3,
  ten4,
  ten5,
  ten6,
  ten7,
  ten8,
  ten_check_digit
];

# Declare how to verify ISBN-10s (including their check digits).
#
# 1. Add together each digit, multiplying by their index;
# 2. Take the result modulo 11;
# 3. State that the result must be 0.

ten_total  = ten0;
ten_total += ten1 * 2;
ten_total += ten2 * 3;
ten_total += ten3 * 4;
ten_total += ten4 * 5;
ten_total += ten5 * 6;
ten_total += ten6 * 7;
ten_total += ten7 * 8;
ten_total += ten8 * 9;
ten_total += ten_check_digit * 10;

invariant ten_total % 11 == 0;

# Declare how to verify ISBN-13s (including their check digit).
#
# 1. Add all even-numbered digits;
# 2. Add all odd-numbered digits and multiply by 3;
# 3. Add both sums together modulo 10;
# 4. State that the result must equal 0

even_digits  = 9;
even_digits += 8;
even_digits += ten1;
even_digits += ten3;
even_digits += ten5;
even_digits += ten7;
even_digits += thirteen_check_digit;

odd_digits  = 7;
odd_digits += ten0;
odd_digits += ten2;
odd_digits += ten4;
odd_digits += ten6;
odd_digits += ten8;

invariant (even_digits + odd_digits * 3) % 10 == 0;

# Collect together all the digits in an ISBN-13.

thirteen_digit = [9, 7, 8,
  ten0,
  ten1,
  ten2,
  ten3,
  ten4,
  ten5,
  ten6,
  ten7,
  ten8,
  thirteen_check_digit
];

# Expose thirteen_digit and ten_digit in the result.

vary thirteen_digit, ten_digit;
